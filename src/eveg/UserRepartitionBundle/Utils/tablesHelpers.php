<?php
// src/eveg/UserRepartitionBundle/Utils/tableHelpers.php

namespace eveg\UserRepartitionBundle\Utils;

/**
 *	Utilities to get tables of coutries / departements
 *
 */
class tablesHelpers
{
	public function getDepFrFullNamesTable()
	{
		$depFrFullNames = array(
            "_01" => "[01] Ain",
            "_02" => "[02] Aisne",
            "_03" => "[03] Allier",
            "_04" => "[04] Alpes-de-Haute-Provence",
            "_05" => "[05] Hautes-Alpes",
            "_06" => "[06] Alpes-Maritimes",
            "_07" => "[07] Ardèche",
            "_08" => "[08] Ardennes",
            "_09" => "[09] Ariège",
            "_10" => "[10] Aube",
            "_11" => "[11] Aude",
            "_12" => "[12] Aveyron",
            "_13" => "[13] Bouches-du-Rhône",
            "_14" => "[14] Calvados",
            "_15" => "[15] Cantal",
            "_16" => "[16] Charente",
            "_17" => "[17] Charente-Maritime",
            "_18" => "[18] Cher",
            "_19" => "[19] Corrèze",
            "_2a" => "[2a] Haute-Corse",
            "_2b" => "[2b] Corse-du-Sud",
            "_21" => "[21] Côte-d'Or",
            "_22" => "[22] Côtes d'Armor",
            "_23" => "[23] Creuse",
            "_24" => "[24] Dordogne",
            "_25" => "[25] Doubs",
            "_26" => "[26] Drôme",
            "_27" => "[27] Eure",
            "_28" => "[28] Eure-et-Loir",
            "_29" => "[29] Finistère",
            "_30" => "[30] Gard",
            "_31" => "[31] Haute-Garonne",
            "_32" => "[32] Gers",
            "_33" => "[33] Gironde",
            "_34" => "[34] Hérault",
            "_35" => "[35] Ille-et-Vilaine",
            "_36" => "[36] Indre",
            "_37" => "[37] Indre-et-Loire",
            "_38" => "[38] Isère",
            "_39" => "[39] Jura",
            "_40" => "[40] Landes",
            "_41" => "[41] Loir-et-Cher",
            "_42" => "[42] Loire",
            "_43" => "[43] Haute-Loire",
            "_44" => "[44] Loire-Atlantique",
            "_45" => "[45] Loiret",
            "_46" => "[46] Lot",
            "_47" => "[47] Lot-et-Garonne",
            "_48" => "[48] Lozère",
            "_49" => "[49] Maine-et-Loire",
            "_50" => "[50] Manche",
            "_51" => "[51] Marne",
            "_52" => "[52] Haute-Marne",
            "_53" => "[53] Mayenne",
            "_54" => "[54] Meurthe-et-Moselle",
            "_55" => "[55] Meuse",
            "_56" => "[56] Morbihan",
            "_57" => "[57] Moselle",
            "_58" => "[58] Nièvre",
            "_59" => "[59] Nord",
            "_60" => "[60] Oise",
            "_61" => "[61] Orne",
            "_62" => "[62] Pas-de-Calais",
            "_63" => "[63] Puy-de-Dôme",
            "_64" => "[64] Pyrénées-Atlantiques",
            "_65" => "[65] Hautes-Pyrénées",
            "_66" => "[66] Pyrénées orientales",
            "_67" => "[67] Bas-Rhin",
            "_68" => "[68] Haut-Rhin",
            "_69" => "[69] Rhône",
            "_70" => "[70] Haute-Saône",
            "_71" => "[71] Saône-et-Loire",
            "_72" => "[72] Sarthe",
            "_73" => "[73] Savoie",
            "_74" => "[74] Haute-Savoie",
            "_75" => "[75] Paris",
            "_76" => "[76] Seine-Maritime",
            "_77" => "[77] Seine-et-Marne",
            "_78" => "[78] Yvelines",
            "_79" => "[79] Deux-Sèvres",
            "_80" => "[80] Somme",
            "_81" => "[81] Tarn",
            "_82" => "[82] Tarn-et-Garonne",
            "_83" => "[83] Var",
            "_84" => "[84] Vaucluse",
            "_85" => "[85] Vendée",
            "_86" => "[86] Vienne",
            "_87" => "[87] Haute-Vienne",
            "_88" => "[88] Vosges",
            "_89" => "[89] Yonne",
            "_90" => "[90] Terr. de Belfort",
            "_91" => "[91] Essonne",
            "_92" => "[92] Hauts-de-Seine",
            "_93" => "[93] Seine-Saint-Denis",
            "_94" => "[94] Val-de-Marne",
            "_95" => "[95] Val-d'Oise",
        );

		return $depFrFullNames;
	}

	public function getDepFrEmptyTable()
	{
		$getDepFrEmptyTable = array(
            "_01" => null,
            "_02" => null,
            "_03" => null,
            "_04" => null,
            "_05" => null,
            "_06" => null,
            "_07" => null,
            "_08" => null,
            "_09" => null,
            "_10" => null,
            "_11" => null,
            "_12" => null,
            "_13" => null,
            "_14" => null,
            "_15" => null,
            "_16" => null,
            "_17" => null,
            "_18" => null,
            "_19" => null,
            "_2a" => null,
            "_2b" => null,
            "_21" => null,
            "_22" => null,
            "_23" => null,
            "_24" => null,
            "_25" => null,
            "_26" => null,
            "_27" => null,
            "_28" => null,
            "_29" => null,
            "_30" => null,
            "_31" => null,
            "_32" => null,
            "_33" => null,
            "_34" => null,
            "_35" => null,
            "_36" => null,
            "_37" => null,
            "_38" => null,
            "_39" => null,
            "_40" => null,
            "_41" => null,
            "_42" => null,
            "_43" => null,
            "_44" => null,
            "_45" => null,
            "_46" => null,
            "_47" => null,
            "_48" => null,
            "_49" => null,
            "_50" => null,
            "_51" => null,
            "_52" => null,
            "_53" => null,
            "_54" => null,
            "_55" => null,
            "_56" => null,
            "_57" => null,
            "_58" => null,
            "_59" => null,
            "_60" => null,
            "_61" => null,
            "_62" => null,
            "_63" => null,
            "_64" => null,
            "_65" => null,
            "_66" => null,
            "_67" => null,
            "_68" => null,
            "_69" => null,
            "_70" => null,
            "_71" => null,
            "_72" => null,
            "_73" => null,
            "_74" => null,
            "_75" => null,
            "_76" => null,
            "_77" => null,
            "_78" => null,
            "_79" => null,
            "_80" => null,
            "_81" => null,
            "_82" => null,
            "_83" => null,
            "_84" => null,
            "_85" => null,
            "_86" => null,
            "_87" => null,
            "_88" => null,
            "_89" => null,
            "_90" => null,
            "_91" => null,
            "_92" => null,
            "_93" => null,
            "_94" => null,
            "_95" => null,
        );

		return $getDepFrEmptyTable;
	}

	public function getRepartitionValuesTable()
	{
		$values = array(
            "1"  => "[1]  Présent",
            "1?" => "[1?] Présence à confirmer",
            "2"  => "[2]  Douteux",
            "3"  => "[3]  Disparu",
            "4"  => "[4]  Erreur",
            "4?" => "[4?] Erreur à confirmer",
            "5"  => "[5]  Absent",
            "5?" => "[5?] Absence à confirmer",
        );
        return $values;
	}

	public function getRepartitionValuesSimpleTable()
	{
		$values = array(
            "1"  => "Présent",
            "1?" => "Présence à confirmer",
            "2"  => "Douteux",
            "3"  => "Disparu",
            "4"  => "Erreur",
            "4?" => "Erreur à confirmer",
            "5"  => "Absent",
            "5?" => "Absence à confirmer",
        );
        return $values;
	}

	public function getSynonymsFullNamesTable()
	{
		$synonymsTypes = array(
            null         => "",
            "syn incl"   => "[syn incl] le synonyme est inclus en totalité dans l'unité retenue, mais ne la recouvre qu'en partie",
            "syn ="      => "[syn =] le synonyme est équivalent à l'unité retenue [en général synonyme postérieur]",
            "syn = ?"    => "[syn = ?] le synonyme est probablement équivalent à l'unité retenue [à vérifier]",
            "syn illeg"  => "[syn illeg] le synonyme est illégitime car le nom a déjà été utilisé antérieurement pour une autre signification",
            "syn pp"     => "[syn pp] le synonyme est inclut en partie dans l'unité retenue, il doit donc normalement exister des autres parties du synonyme dans la base",
            "syn pmaxp"  => "[syn pmaxp] le synonyme est inclut en majeure partie dans l'unité retenue",
            "syn pminp"  => "[syn pminp] le synonyme est inclut en mineure partie dans l'unité retenue",
            "syn compl"  => "[syn compl] le synonyme est complexe, synusialement ou classiquement, ses unités sont donc à répartir [pp], ou bien le synonyme est à supprimer complètement [trop complexe et obscur]",
            "syn ambig"  => "[syn ambig] le nom du synonyme créé une confusion",
            "syn non"    => "[syn non] le pseudosynonyme n'en est pas un, il s'agit d'une unité différente",
            "syn inval"  => "[syn inval] synonyme invalide",
            "syn mscr"   => "[syn mscr] le synonyme est un manuscrit",
            "syn ined"   => "[syn ined] le synonyme n'a pas été publié",
            "syn nn"     => "[syn nn] le synonyme est un nomen nudum",
            "syn fantom" => "[syn fantom] le nom mentionné par les auteurs n'existe pas dans la référence citée",
            "corr."      => "[corr.] correxit (correction en cas d'erreur d'identification)"
        );

		return $synonymsTypes;
	}
}



